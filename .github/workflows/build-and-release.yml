name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build (runs build.py)
        run: python build.py

      - name: List frontend dist
        run: ls -la frontend/dist || true

      - name: Create Linux artifact (zip)
        run: |
          mkdir -p release
          cp -r dist/UnchainedLauncher release/UnchainedLauncher-linux || true
          zip -r release/unchainedlauncher-linux-${{ github.ref_name }}.zip release || true

      - name: Upload artifact (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: unchainedlauncher-linux
          path: release/unchainedlauncher-linux-${{ github.ref_name }}.zip

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure npm is on PATH (diagnose)
        run: |
          where npm || node -v || echo "npm not found"

      - name: Build (runs build.py)
        shell: bash
        run: python build.py

      - name: Package Windows exe
        run: |
          mkdir -p release
          copy /Y dist\\UnchainedLauncher\\UnchainedLauncher.exe release\\UnchainedLauncher.exe
          powershell -Command "Compress-Archive -Path release\\* -DestinationPath release\\unchainedlauncher-windows-${{ github.ref_name }}.zip"

      - name: Upload artifact (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: unchainedlauncher-windows
          path: release/unchainedlauncher-windows-${{ github.ref_name }}.zip

  publish-release:
    name: Publish Release and Attach Artifacts
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: unchainedlauncher-linux
          path: downloads/linux

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: unchainedlauncher-windows
          path: downloads/windows

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: "Release ${{ github.ref_name }} - built by CI"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux ZIP to Release
        uses: softprops/action-gh-release@v1
        with:
          files: downloads/linux/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows ZIP to Release
        uses: softprops/action-gh-release@v1
        with:
          files: downloads/windows/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-release:
    name: Publish Release and Attach Artifacts
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: unchainedlauncher-linux
          path: downloads

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: unchainedlauncher-windows
          path: downloads

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: "Release ${{ github.ref_name }} - built by CI"
          files: |
            downloads/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

